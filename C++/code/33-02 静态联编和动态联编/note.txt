1. 多态性提供结构与具体实现之间的一层隔离，使创建的程序具有可扩展性。
2. 运算符重载和函数重载属于编译时多态（静态多态），提到的时候一般不提及静态多态，常说的都是运行时多态（动态多态）。
3. 派生类和虚函数实现动态多态。
4. 静态多态和动态多态的区别就是函数地址的绑定时间：
    静态多态：函数地址早绑定（静态联编），在编译阶段就可以确定函数的调用地址
    动态多态：函数地址晚绑定（动态联编），函数地址不能在编译阶段确定

5. 对于具有父子关系的两个类的对象的相互赋值，C++可以不需要通过类型强制转换
6. 多态的满足条件：
    ① 父类中有虚函数
    ② 子类 重写 父类的虚函数 （重写而非重载！！！）
    ③ 父类的指针或引用指向子类的对象(直接把子类对象赋值或者拷贝构造给父类对象是不行的，只会调用父类中的函数)
7. 重载和重写的区别：
    重载：只有函数名一致
    重写：返回值、函数名、参数都一致
    见：https://blog.csdn.net/cnds123/article/details/131653045
8. 子类在重写父类虚函数时，加或不加virtual和override关键字都可以。