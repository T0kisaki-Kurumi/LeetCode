1. 菱形继承：两个子类继承同一个父类，同时又有一个类多继承了这两个子类。
2. 菱形继承导致的问题：
    ① 两个子类同时继承了父类的成员，调用时候会产生二义性。
    ② 继承两个子类的类把成员继承了两份，但这一数据实际上只需要一份。
3. 使用虚继承的方式可以解决菱形继承问题，语法为在继承方式之前加一个virtual关键字，此时基类变为虚基类
4. 此案例中，Sheep类和Tuo类不再直接继承一个m_Age成员，而是继承一个vbptr（virtual base pointer 虚基类指针），指针指向一个虚基类表vbtable。
   vbtable中保存有偏移量，通过偏移量可以找到虚基类中唯一的一份数据。

    普通继承结构：
        class SheepTuo  size(8):
                +---
        0       | +--- (base class Sheep)
        0       | | +--- (base class Animal)
        0       | | | m_Age
                | | +---
                | +---
        4       | +--- (base class Tuo)
        4       | | +--- (base class Animal)
        4       | | | m_Age
                | | +---
                | +---
                +---

    虚继承结构：
        class SheepTuo  size(12):
                +---
        0       | +--- (base class Sheep)
        0       | | {vbptr}
                | +---
        4       | +--- (base class Tuo)
        4       | | {vbptr}
                | +---
                +---
                +--- (virtual base Animal)
        8       | m_Age
                +---

        SheepTuo::$vbtable@Sheep@:
        0       | 0
        1       | 8 (SheepTuod(Sheep+0)Animal)

        SheepTuo::$vbtable@Tuo@:
        0       | 0
        1       | 4 (SheepTuod(Tuo+0)Animal)
        vbi:       class  offset o.vbptr  o.vbte fVtorDisp
                 Animal       8       0       4 0



使用vs开发人员命令工具查看类中的成员：
先转到文件所在目录，再使用命令：
    cl /d1 reportSingleClassLayout[*] 文件名
[*]处为类名，文件名若有空格，将文件名整个用双引号括起来